name: Deploy

on:
  push:
    branches: [ "master" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Ã‰tape 1 : Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Ã‰tape 2 : Setup PNPM
      - name: Setup PNPM
        uses: pnpm/action-setup@v2
        with:
          version: 9

      # Ã‰tape 3 : Setup Node.js avec cache
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Ã‰tape 4 : Cache node_modules pour accÃ©lÃ©rer les prochaines builds
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Ã‰tape 5 : Installer les dÃ©pendances
      - name: Install dependencies
        run: pnpm install

      # Ã‰tape 6 : Lancer les tests
      - name: Run tests
        run: pnpm test

      # Ã‰tape 7 : Build project
      - name: Build project
        run: pnpm build

      # Ã‰tape 8 : Deploy si les Ã©tapes prÃ©cÃ©dentes sont OK
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "âœ… Connexion SSH rÃ©ussie."
            cd ~/Ourmusic/frontend

            echo "ðŸ“¦ Pulling latest code..."
            git pull origin master

            echo "ðŸš€ Rebuilding Docker image..."
            docker compose build --no-cache frontend

            echo "ðŸ§© Restarting container..."
            docker compose up -d frontend

            echo "âœ… DÃ©ploiement terminÃ© avec succÃ¨s."
